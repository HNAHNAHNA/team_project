name: Deploy Spring Boot

on:
  push:
    paths:
      - 'back/**'
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      - name: Build Docker image
        env:
          IMAGE_ID: ghcr.io/${{ github.repository_owner }}/team_project/staynguide-spring:latest
        run: |
          docker build -f back/Dockerfile -t $IMAGE_ID ./back

      - name: Push to GHCR
        run: |
          IMAGE_ID="ghcr.io/$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')/team_project/staynguide-spring:latest"
          docker push $IMAGE_ID

      - name: Copy SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Send base64-encoded application.properties to EC2
        env:
          SPRING_ENV_B64: ${{ secrets.SPRING_ENV_B64 }}
        run: |
          echo "$SPRING_ENV_B64" > encoded_props.txt
          scp -i ec2_key.pem encoded_props.txt ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/team_project/back/

      - name: Deploy on EC2
        run: |
          ssh -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/team_project/back

            echo "📦 base64 복호화 → application.properties 생성"
            mkdir -p src/main/resources
            base64 -d encoded_props.txt > src/main/resources/application.properties
            rm encoded_props.txt

            echo "✅ 도커 로그인"
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "🛑 기존 컨테이너 중지 및 삭제"
            docker stop spring-back || true
            docker rm spring-back || true

            echo "📥 GHCR에서 최신 이미지 pull"
            docker pull ghcr.io/${{ github.repository }}/staynguide-spring:latest

            echo "🚀 새 컨테이너 실행"
            docker run -d --name spring-back -p 8091:8091 ghcr.io/${{ github.repository }}/staynguide-spring:latest
          EOF
