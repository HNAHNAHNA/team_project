plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.staynguide'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// JPA 및 데이터베이스 연동을 위한 필수 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Security 기능을 사용하기 위한 필수 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Validation (입력값 유효성 검증용)
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // 개발 편의성 도구 (핫 리로드 등)
    /*developmentOnly 'org.springframework.boot:spring-boot-devtools'*/
    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
        // JWT 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5' // 최신 버전 확인
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5' // JSON 파싱을 위한 Jackson 연동
}

tasks.named('test') {
	useJUnitPlatform()
}

/*tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}*/